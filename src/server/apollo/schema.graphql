type locale {
	en: String
	mi: String
}

type images {
	banner: String
	landscape: String
	portrait: String
	front: String
	back: String
}

type parts {
	nick: String
	title: String
	alternate: String
	first: String
	middle: String
	last: String
	suffix: String
}

type phonetic {
	markdown: String
	html: String
}

type titles {
	ascii: String
	double: String
	phonetic: phonetic
	transliteration: String
	plural: String
	parts: parts
	full: String
}

type title {
	locale: locale
	alt: titles
}

type metric {
	area: Int
	population: Int
}

type spoken {
	pre: Float
	start: Float
	end: Float
	post: Float
	speaker: speaker
}

type meaning {
	_id: ID!
	slug: locale
	title: title
	components: String
	translation: String
}

type links {
	wikipedia: locale
	wikidata: String
	maorimaps: String
	website: String
}

type membership {
	group: group
	subgroup_id: String
}

type group {
	_id: ID!
	slug: locale
	title: title
	plural: Boolean
	place: place
	type: String
	zone: zone
	feature: feature
	places: [place]
	previous: group
	next: group
	links: links
	notes: notes
}

type placenamenotes {
	name: locale
	speech: locale
	spelling: locale
	place: locale
}

type notes {
	description: locale
	creation: locale
	recording: locale
	funding: locale
	wikipedia: locale
}

type funding {
	source: locale
	url: String
}

type see {
	zone: zone
	placename: placename
	type: String
}

type addendum {
	zone: zone
}

type googleplace {
	id: String
	name: String
}

type area {
	title: title
	location: location
	links: links
}

type location {
	description: locale
	googleplace: googleplace
	source: String
	position: position
	bounds: bounds
	window: window
}

type position {
	lat: Float
	lng: Float
}

type bounds {
	ne: position
	sw: position
}

type window {
	center: position
	zoom: Int
}

type audio {
	file: String
	length: Int
	size: Int
}

type island {
	_id: ID!
	slug: locale
	title: title
	audio: audio
	description: locale
	location: location
	images: images
	previous: island
	next: island
	parts: [part]
	maps: [map]
	regions: [region]
	sectors: [sector]
	speakers: [speaker]
	placenames: [placename]
	funding: funding
	metric: metric
	links: links
	notes: notes
}

type part {
	_id: ID!
	slug: locale
	title: title
	audio: audio
	dates: dates
	distance: Int
	format: locale
	notes: notes
	images: images
	island: island
	previous: part
	next: part
	maps: [map]
	regions: [region]
	sectors: [sector]
	speakers: [speaker]
	placenames: [placename]
	funding: funding
}

type map {
	_id: ID!
	slug: locale
	title: title
	dates: dates
	images: images
	island: island
	part: part
	previous: map
	next: map
	regions: [region]
	sectors: [sector]
	zones: [zone]
	maplinks: [maplink]
}

type region {
	_id: ID!
	slug: locale
	title: title
	images: images
	island: island
	part: part
	map: map
	previous: region
	next: region
	zones: [zone]
	metric: metric
	links: links
	notes: notes
}

type sector {
	_id: ID!
	slug: locale
	title: title
	images: images
	island: island
	part: part
	map: map
	previous: region
	next: region
	zones: [zone]
	links: links
	notes: notes
}

type district {
	_id: ID!
	slug: locale
	title: title
	seat: String
	island: island
	zones: [zone]
	previous: district
	next: district
	metric: metric
	links: links
	notes: notes
}

type zone {
	_id: ID!
	number: Int
	slug: locale
	title: title
	audio: audio
	images: images
	boundary: locale
	gazetteer: String
	areas: [area]
	sector: sector
	district: district
	previous: zone
	next: zone
	speakers: [speaker]
	placenames: [placename]
	addenda: [placename]
	featured: [placename]
	maplink: maplink
	tribes: [tribe]
	groups: [group]
	links: links
	notes: notes
}

type placename {
	_id: ID!
	slug: locale
	number: Int
	featured: Int
	notes: placenamenotes
	zone: zone
	island: island
	part: part
	addendum_zones: [zone]
	see: [see]
	previous: placename
	next: placename
	names: [name]
	places: [place]
}

type name {
	_id: ID!
	title: title
	spoken: spoken
	categories: [String]
	placename: placename
	meaning: meaning
	identical: [name]
	similar: [name]
}

type place {
	_id: ID!
	title: title
	plural: Boolean
	groups: [membership]
	location: location
	links: links
	placename: placename
	feature: feature
}

type speaker {
	_id: ID!
	slug: locale
	title: title
	gender: String
	notes: notes
	location: location
	url: String
	islands: [island]
	parts: [part]
	zones: [zone]
	previous: speaker
	next: speaker
	placenames: [placename]
}

type dates {
	start: String
	end: String
	launch: String
}

type maparea {
	shape: String
	coords: [Int]
}

type maplink {
	map: map
	mapareas: [maparea]
}

type osm {
	class: String
	type: String
}

type category {
	gazetteer: String
	osm: osm
}

type feature {
	_id: ID!
	slug: locale
	title: title
	images: images
	order: Int
	category: category
	places: [place]
	groups: [group]
	previous: feature
	next: feature
	links: links
	notes: notes
}

type tribe {
	_id: ID!
	slug: locale
	title: title
	zones: [zone]
	previous: tribe
	next: tribe
	metric: metric
	links: links
	notes: notes
}

type gazetteer {
	_id: ID!
	name: String
	district: String
	feature: String
	location: location
}

type search {
	text: String
	value: String
}

type total {
	island: Int
	part: Int
	map: Int
	region: Int
	zone: Int
	speaker: Int
	group: Int
	feature: Int
	tribe: Int
	placename: Int
	place: Int
	name: Int
	district: Int
}

input pagination {
	size: Int
	start: Int
	page: Int
}

input sort {
	field: String
	order: Int
}

input filter {
	field: String
	value: String
}

type Query {
	islands(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [island]
	island(
		filter: [filter]
		lang: String
	): island
	parts(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [part]
	part(
		filter: [filter]
		lang: String
	): part
	maps(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [map]
	map(
		filter: [filter]
		lang: String
	): map
	sectors(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [sector]
	sector(
		filter: [filter]
		lang: String
	): sector
	regions(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [region]
	region(
		filter: [filter]
		lang: String
	): region
	zones(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [zone]
	zone(
		filter: [filter]
		lang: String
	): zone
	speakers(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [speaker]
	speaker(
		filter: [filter]
		lang: String
	): speaker
	groups(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [group]
	group(
		filter: [filter]
		lang: String
	): group
	features(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [feature]
	feature(
		filter: [filter]
		lang: String
	): feature
	districts(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [district]
	district(
		filter: [filter]
		lang: String
	): district
	tribes(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [tribe]
	tribe(
		filter: [filter]
		lang: String
	): tribe
	placenames(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [placename]
	placename(
		filter: [filter]
		lang: String
	): placename
	places(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [place]
	place(
		filter: [filter]
		lang: String
	): place
	names(
		filter: [filter]
		lang: String
		sort: sort
		pagination: pagination
	): [name]
	name(
		filter: [filter]
		lang: String
	): name
	search(
		term: String
		lang: String
	): [search]
	autocomplete(
		term: String
		lang: String
	): [search]
	total: total
}
